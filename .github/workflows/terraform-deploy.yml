name: 'Deploy Infrastructure'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'iotops-demo'

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment: 
      name: ${{ github.event.inputs.environment }} # Dynamically set the environment based on input

    defaults:
      run:
        working-directory: ./terraform

    steps:
    - name: 'Check out repository code'
      uses: actions/checkout@v2

    - name: 'Set up Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Set up Terraform'
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }} # If using Terraform Cloud, this is where you'd provide the token

    - name: 'Initialize Terraform'
      run: terraform init

    - name: 'Terraform Plan'
      run: terraform plan -out=tfplan
      continue-on-error: true  # If planning fails, continue to the next step for potential cleanup or reporting

    - name: 'Terraform Apply'
      if: ${{ success() }}  # Apply only if the 'plan' step was successful
      run: terraform apply -auto-approve tfplan

    - name: 'Cleanup: Azure Logout'  # Making it clear this is a cleanup step
      if: always()  # Always run this step to logout, even if a previous step fails
      run: az logout
