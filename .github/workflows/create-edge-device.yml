name: Create Edge Device

on:
  workflow_dispatch:
    inputs:
      edge_device_id:
        description: The ID of the edge device.
        required: true
        default: "iotops-edge"
      iothub_name:
        description: The name of the IoT Hub.
        required: true
        default: "iotops-hub"
      environment:
        description: "Environment to deploy to"
        required: true
        default: "iotops-demo"

jobs:
  deploy:
    name: Deploy IoT Edge Device
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    defaults:
      run:
        shell: bash
        working-directory: ./

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create IoT Edge Device
        run: |
          # list existing devices
          device_list=$(az iot hub device-identity list --hub-name ${{ github.event.inputs.iothub_name }} | sed -nr 's/\s*"deviceId": "(.*)".*/|\1|/p' )

          echo "Edge Device Registration"
          echo "-----------------------------------------"
          echo "Device ID:       ${{ github.event.inputs.edge_device_id }}"
          echo "Authentication:  shared_private_key"
          echo "-----------------------------------------"

          # check for matching (existing) devices
          matched=$( echo "${device_list}" | sed -nr "s/\|${{ github.event.inputs.edge_device_id }}\|/found/p" )

          # if there's no match, create a new device
          if [ -z "${matched}" ]; then
            echo "Creating new edge device..."
            az iot hub device-identity create \
              --hub-name ${{ github.event.inputs.iothub_name }} \
              --device-id ${{ github.event.inputs.edge_device_id }} \
              --edge-enabled true \
              --am shared_private_key
          fi

          # Read the content of device-twins/twin_tags.json into a variable
          tags=$(cat device-twins/twin_tags.json)

          # update the deployment tag as specified
          echo "Updating tags for target deployment..."
          az iot hub device-twin update \
            --hub-name ${{ github.event.inputs.iothub_name }} \
            --device-id ${{ github.event.inputs.edge_device_id }} \
            --tags "$tags"
